apiVersion: apps/v1
kind: Deployment
metadata:
  name: officeapps
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: officeapps
  template:
    metadata:
      labels:
        app: officeapps
    spec:
      containers:
      - name: officeapps
        image: ghcr.io/jppgroup/officeappserver:2405301059 # {"$imagepolicy": "flux-system:officeappsimagepolicy"}
        args: ["run"]
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "150M"
            cpu: "0.05"
          limits:
            memory: "512M"
            cpu: "1"
      imagePullSecrets:
      - name: githubcred
---
apiVersion: v1
kind: Service
metadata:
  name: officeapps
  namespace: default
spec:
  selector:
    app: officeapps
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: officeappsroute
  namespace: default
spec:
  parentRefs:
  - name: main-gateway
    sectionName: https
    namespace: istio-system
  #hostnames:
  #- "services.jppuk.net"
  #- "jppcloud.uksouth.cloudapp.azure.com"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /office
        #    filters:
        #    - type: URLRewrite
        #      urlRewrite:          
        #        path:
        #          type: ReplacePrefixMatch
        #replacePrefixMatch: /fennel
    backendRefs:
    - name: officeapps
      port: 8080
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImageRepository
metadata:
  name: officeappsimagerepo
  namespace: flux-system
spec:
  image: ghcr.io/jppgroup/officeappserver
  interval: 5m
  secretRef:
    name: githubcred
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImagePolicy
metadata:
  name: officeappsimagepolicy
  namespace: flux-system
spec:
  imageRepositoryRef:
    name: officeappsimagerepo
  filterTags:
    pattern: '(?P<ts>[0-9]+)'
    extract: '$ts'
  policy:
    numerical:
      order: asc
